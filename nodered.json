[
    {
        "id": "55d340e2de665662",
        "type": "tab",
        "label": "WaterBnB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "440c31b91b07f9cd",
        "type": "group",
        "z": "55d340e2de665662",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bc843fc725869489",
            "04907af45017e761",
            "50c248cb39ab5fd7"
        ],
        "x": 94,
        "y": 399,
        "w": 772,
        "h": 142
    },
    {
        "id": "21cde0ea638fbce5",
        "type": "group",
        "z": "55d340e2de665662",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "aa69220def179e48",
            "cbc4c4559185c027"
        ],
        "x": 94,
        "y": 299,
        "w": 412,
        "h": 82
    },
    {
        "id": "362cf8b9a12c336a",
        "type": "group",
        "z": "55d340e2de665662",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "12bcb499718288e8",
            "765b054a715e9956",
            "f47faf88c0eeaa45",
            "2b4017b18b9dbfdb",
            "bd69ed1e257f137d"
        ],
        "x": 84,
        "y": 559,
        "w": 802,
        "h": 142
    },
    {
        "id": "1a7bc3dee7a73d5e",
        "type": "group",
        "z": "55d340e2de665662",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "02a34d6daa594ac3",
            "59beceb9285fa3f3",
            "551d351e90f3b466"
        ],
        "x": 94,
        "y": 919,
        "w": 532,
        "h": 162
    },
    {
        "id": "acd54212abb8b9e5",
        "type": "group",
        "z": "55d340e2de665662",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "64b8bb69691b548b",
            "2bff47849befb2a4",
            "d908f18ee592e0a1",
            "5c755bc99b24fd61"
        ],
        "x": 94,
        "y": 739,
        "w": 812,
        "h": 142
    },
    {
        "id": "fa69f4b6219e8233",
        "type": "ui_group",
        "z": "55d340e2de665662",
        "name": "Service WaterBnB :",
        "tab": "cda5fbe08f191df5",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2440edb5d689cbd1",
        "type": "mqtt-broker",
        "name": "Mosquitto broker",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "tls": "",
        "clientid": "DG",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bc0ac00f975a6dea",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "cda5fbe08f191df5",
        "type": "ui_tab",
        "z": "55d340e2de665662",
        "name": "WaterBnB",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cdd2e33ff785afa6",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "498d5ed6bf3d7517",
        "type": "mqtt-broker",
        "name": "Private Server",
        "broker": "84.235.237.236",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "eefe5b7e2bb65578",
        "type": "inject",
        "z": "55d340e2de665662",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "6627806f9404a76d"
            ]
        ]
    },
    {
        "id": "6627806f9404a76d",
        "type": "function",
        "z": "55d340e2de665662",
        "name": "Téléportation",
        "func": "// create random position\nvar lat = 43.61999752 + Math.random() * 0.1;\nvar lon = 7.0499998 + Math.random() * 0.1;\nmsg.payload={\n    layer:\"swimming pools\",\n    lat:lat, \n    lon:lon, \n    name:global.get(\"clientid\"), \n    description: \"Temperature in my swimming pool\",\n    value: 20.5,\n    unit: \"°C\",\n    icon:\"male\", \n    color:\"#000\"};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "671d4e1b912c6a15",
                "e47989c48fe4c64f",
                "10e6f870ea16658f"
            ]
        ]
    },
    {
        "id": "00b4d792d40b0f0c",
        "type": "ui_button",
        "z": "55d340e2de665662",
        "name": "",
        "group": "fa69f4b6219e8233",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Move Client",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-male",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "6627806f9404a76d"
            ]
        ]
    },
    {
        "id": "12bcb499718288e8",
        "type": "mqtt in",
        "z": "55d340e2de665662",
        "g": "362cf8b9a12c336a",
        "name": "",
        "topic": "uca/iot/piscine",
        "qos": "0",
        "datatype": "utf8",
        "broker": "2440edb5d689cbd1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 620,
        "wires": [
            [
                "f47faf88c0eeaa45",
                "bd69ed1e257f137d"
            ]
        ]
    },
    {
        "id": "765b054a715e9956",
        "type": "debug",
        "z": "55d340e2de665662",
        "g": "362cf8b9a12c336a",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 660,
        "wires": []
    },
    {
        "id": "f47faf88c0eeaa45",
        "type": "json",
        "z": "55d340e2de665662",
        "g": "362cf8b9a12c336a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 660,
        "wires": [
            [
                "2b4017b18b9dbfdb"
            ]
        ]
    },
    {
        "id": "aa69220def179e48",
        "type": "ui_button",
        "z": "55d340e2de665662",
        "g": "21cde0ea638fbce5",
        "name": "",
        "group": "fa69f4b6219e8233",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "cbc4c4559185c027"
            ]
        ]
    },
    {
        "id": "cbc4c4559185c027",
        "type": "function",
        "z": "55d340e2de665662",
        "g": "21cde0ea638fbce5",
        "name": "Reset Layer",
        "func": "// clear the \"by default\" layer \nmsg.payload = {\"command\": { \"clear\": \"swimming pools\" } };\nflow.set(\"clientid\", null);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "e47989c48fe4c64f"
            ]
        ]
    },
    {
        "id": "2b4017b18b9dbfdb",
        "type": "function",
        "z": "55d340e2de665662",
        "g": "362cf8b9a12c336a",
        "name": "json adapt",
        "func": "//http://stevesnoderedguide.com/node-red-functions\n\nvar nmsg = { // nouveau message \n  topic: msg.topic // on garde l'ancien topic \n};\n\nvar busy;\nif (msg.payload.piscine.occuped === false)\n  busy = \"battery-empty\";\nelse\n  busy = \"battery-full\";\n\nvar hsc;\nif (msg.payload.piscine.hotspot === false)\n  hsc = \"Blue\";\nelse\n  hsc = \"Red\";\n\nvar clientid = flow.get('clientid')\n\nvar wl_label = \"Lien de demande d'ouverture de \" + msg.payload.info.ident\n  + \" par \" + clientid + \" : Cliquez moi !\";\n\nvar server = \"waterbnb-3vwc.onrender.com\";\n\nvar url = \"http://\" + server + \"/open?idu=\" + clientid\n  + \"&idswp=\" + msg.payload.info.ident;\n\nnmsg.payload = {\n  layer: \"swimming pools\",\n  name: msg.payload.info.ident,\n  description: msg.payload.info.user,\n  weblink: { \"name\": wl_label, \"url\": url },\n  radius: 100,\n  unit: \"C\",\n  color: \"#000\",\n  value: msg.payload.status.temperature,\n  lat: msg.payload.location.gps.lat,\n  lon: msg.payload.location.gps.lon,\n  iconColor: hsc,\n  icon: busy\n}\n\nreturn nmsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 660,
        "wires": [
            [
                "e47989c48fe4c64f",
                "765b054a715e9956"
            ]
        ]
    },
    {
        "id": "02a34d6daa594ac3",
        "type": "http in",
        "z": "55d340e2de665662",
        "g": "1a7bc3dee7a73d5e",
        "name": "Open",
        "url": "/open",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "59beceb9285fa3f3",
                "551d351e90f3b466"
            ]
        ]
    },
    {
        "id": "59beceb9285fa3f3",
        "type": "debug",
        "z": "55d340e2de665662",
        "g": "1a7bc3dee7a73d5e",
        "name": "Open debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 960,
        "wires": []
    },
    {
        "id": "551d351e90f3b466",
        "type": "http response",
        "z": "55d340e2de665662",
        "g": "1a7bc3dee7a73d5e",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "bc843fc725869489",
        "type": "debug",
        "z": "55d340e2de665662",
        "g": "440c31b91b07f9cd",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 500,
        "wires": []
    },
    {
        "id": "04907af45017e761",
        "type": "ui_form",
        "z": "55d340e2de665662",
        "g": "440c31b91b07f9cd",
        "name": "WaterBnB Client Identification",
        "label": "WaterBnB Client Login (= numéro étudiant UCA)",
        "group": "fa69f4b6219e8233",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Client ID",
                "value": "clientid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "clientid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "clientform",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 250,
        "y": 480,
        "wires": [
            [
                "bc843fc725869489",
                "50c248cb39ab5fd7"
            ]
        ]
    },
    {
        "id": "10e6f870ea16658f",
        "type": "debug",
        "z": "55d340e2de665662",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "64b8bb69691b548b",
        "type": "mqtt in",
        "z": "55d340e2de665662",
        "g": "acd54212abb8b9e5",
        "name": "",
        "topic": "uca/waterbnb",
        "qos": "2",
        "datatype": "utf8",
        "broker": "498d5ed6bf3d7517",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 820,
        "wires": [
            [
                "d908f18ee592e0a1"
            ]
        ]
    },
    {
        "id": "2bff47849befb2a4",
        "type": "debug",
        "z": "55d340e2de665662",
        "g": "acd54212abb8b9e5",
        "name": "debug from owntracks MQTT topic",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 840,
        "wires": []
    },
    {
        "id": "d908f18ee592e0a1",
        "type": "json",
        "z": "55d340e2de665662",
        "g": "acd54212abb8b9e5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 820,
        "wires": [
            [
                "2bff47849befb2a4",
                "5c755bc99b24fd61"
            ]
        ]
    },
    {
        "id": "5c755bc99b24fd61",
        "type": "function",
        "z": "55d340e2de665662",
        "g": "acd54212abb8b9e5",
        "name": "json convert",
        "func": "// Convert json of owntracks to worldmap\nreturn {\n    payload: {\n        layer:\"waterbnb\",\n        name: msg.payload.tid,\n        lat: msg.payload.lat,\n        lon: msg.payload.lon,\n        icon: 'user-circle-o',\n        iconColor : \"Blue\"\n    }\n};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 780,
        "wires": [
            [
                "e47989c48fe4c64f"
            ]
        ]
    },
    {
        "id": "bd69ed1e257f137d",
        "type": "debug",
        "z": "55d340e2de665662",
        "g": "362cf8b9a12c336a",
        "name": "debug  from swimming pools",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 600,
        "wires": []
    },
    {
        "id": "620fcc4709f8cc28",
        "type": "comment",
        "z": "55d340e2de665662",
        "name": "Formulaire d'identification du client",
        "info": "Grâce au formulaire, on positionne une variable globale au flow : l'ident du client qui utilise le service.",
        "x": 1240,
        "y": 480,
        "wires": []
    },
    {
        "id": "50c248cb39ab5fd7",
        "type": "function",
        "z": "55d340e2de665662",
        "g": "440c31b91b07f9cd",
        "name": "Callback du formulaire d'identification",
        "func": "// Ce node permet de stocker l'identificateur du \n// client dans le flow (un peu comme une variable \n// globale)\n\n\n//https://stevesnoderedguide.com/node-red-variables\n//https://techexplorations.com/guides/esp32/node-red-esp32-project/node-red-messages-variables/\n\nif (msg.topic === \"clientform\"){\n  flow.set(\"clientid\", msg.payload.clientid);\n  }\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "77e2d469a735b9a7",
        "type": "comment",
        "z": "55d340e2de665662",
        "name": "Fichier WaterBnB.json => Dashboard \"donné\" à un client du service WaterBnB",
        "info": "Lorsqu'un client va vouloir accéder à une piscine, il va devoir utiliser cette interface graphique.\n",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "3c8e02caac221450",
        "type": "comment",
        "z": "55d340e2de665662",
        "name": "Reset display",
        "info": "",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "ca623df41b080002",
        "type": "comment",
        "z": "55d340e2de665662",
        "name": "Affichage avec hyperlien d'ouverture des piscines ",
        "info": "",
        "x": 1280,
        "y": 620,
        "wires": []
    },
    {
        "id": "a85c8051990c2a64",
        "type": "comment",
        "z": "55d340e2de665662",
        "name": "Pour tester la réception de la demande d'ouverture",
        "info": "",
        "x": 870,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a34e3d907d0ebb68",
        "type": "comment",
        "z": "55d340e2de665662",
        "name": "Affichage de la géolocalisation du client de WaterBnB",
        "info": "",
        "x": 1160,
        "y": 800,
        "wires": []
    },
    {
        "id": "be0fc17bc9829106",
        "type": "comment",
        "z": "55d340e2de665662",
        "name": "trois choses à paramétrer => le topic de owntracks, le lien de demande d'ouverture et l'ID du client via le formulaire",
        "info": "Lorsqu'un client va vouloir accéder à une piscine, il va devoir utiliser cette interface graphique.\n",
        "x": 470,
        "y": 100,
        "wires": []
    },
    {
        "id": "671d4e1b912c6a15",
        "type": "worldmap-tracks",
        "z": "55d340e2de665662",
        "name": "",
        "depth": "6",
        "layer": "combined",
        "smooth": false,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "e47989c48fe4c64f"
            ]
        ]
    },
    {
        "id": "e47989c48fe4c64f",
        "type": "ui_worldmap",
        "z": "55d340e2de665662",
        "group": "fa69f4b6219e8233",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "lat": "43.61999752",
        "lon": "7.0499998",
        "zoom": "11",
        "layer": "OSMC",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,TL,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1220,
        "y": 380,
        "wires": []
    }
]
